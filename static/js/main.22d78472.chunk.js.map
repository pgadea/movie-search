{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","concat","image","title","text","SearchBar","state","value","timeout","doSearch","event","_this","setState","target","clearTimeout","setTimeout","callback","lib_default","name","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","Object","toConsumableArray","results","page","total_pages","localStorage","setItem","JSON","stringify","getItem","parse","objectSpread","elements_HeroImage_HeroImage","backdrop_path","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","poster_path","id","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","filter","member","job","cast","catch","error","console","elements_Navigation_Navigation","location","elements_MovieInfo_MovieInfo","elements_MovieInfoBar_MovieInfoBar","runtime","elements_Actor_Actor","NotFound","App","basename","Fragment","elements_Header_Header","react_router","path","component","exact","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.22d78472.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"rmdb-header\">\r\n            <div className=\"rmdb-header-content\">\r\n                <Link to=\"/\">\r\n                    <img className=\"rmdb-logo\" src=\"./images/reactMovie_logo.png\" alt=\"rmdb-logo\" />\r\n                </Link>\r\n                <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"tmdb-logo\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","// Configuration for TMDB\n// To see the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'dc2e3d283f656bea4ef3f15ac0a5f652';\n//const API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = (props) => {\r\n    return (\r\n        <div className=\"rmdb-heroimage\"\r\n        style={{\r\n            background:\r\n              `linear-gradient(to bottom, rgba(0,0,0,0)\r\n              39%,rgba(0,0,0,0)\r\n              41%,rgba(0,0,0,0.65)\r\n              100%),\r\n              url('${props.image}'), #1c1c1c`\r\n          }}\r\n        >\r\n            <div className=\"rmdb-heroimage-content\">\r\n                <div className=\"rmdb-heroimage-text\">\r\n                    <h1>{props.title}</h1>\r\n                    <p>{props.text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroImage;","import React, { Component } from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    doSearch = (event) => {\r\n        this.setState({ value: event.target.value })\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.props.callback(this.state.value);\r\n        }, 500);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-searchbar\">\r\n                <div className=\"rmdb-searchbar-content\">\r\n                    <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"rmdb-searchbar-input\"\r\n                        placeholder=\"Search\"\r\n                        onChange={this.doSearch}\r\n                        value={this.state.value}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = (props) => {\r\n\r\n    const renderElements = () => {\r\n        const gridElements = props.children.map( (element, i) => {\r\n            return (\r\n                <div key={i} className=\"rmdb-grid-element\">\r\n                    {element}\r\n                </div>\r\n            )\r\n        })\r\n        return gridElements;\r\n    }\r\n\r\n    return (\r\n        <div className=\"rmdb-grid\">\r\n            {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n            <div className=\"rmdb-grid-content\">\r\n                {renderElements()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFourColGrid.propTypes = {\r\n    header: PropTypes.string,\r\n    loading: PropTypes.bool\r\n}\r\n\r\nexport default FourColGrid;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = (props) => {\r\n    return (\r\n        <div className=\"rmdb-moviethumb\">\r\n            {props.clickable ?\r\n                <Link to={{ pathname: `/${props.movieId}`, movieName: `${props.movieName}`}}>\r\n                    <img src={props.image} alt=\"moviethumb\"/>\r\n                </Link>\r\n                :\r\n                <img src={props.image} alt=\"moviethumb\"/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nMovieThumb.propTypes = {\r\n    image: PropTypes.string,\r\n    movieId: PropTypes.number,\r\n    movieName: PropTypes.string\r\n}\r\n\r\nexport default MovieThumb;","import React from 'react';\r\nimport './LoadMoreBtn.css'\r\n\r\nconst LoadMoreBtn = (props) => {\r\n    return (\r\n        <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n            <p>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreBtn;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\n\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        movies: [],\r\n        heroImage: null,\r\n        loading: false,\r\n        currentPage: 0,\r\n        totalPages: 0,\r\n        searchTerm: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('HomeState')) {\r\n            const state = JSON.parse(localStorage.getItem('HomeState'));\r\n            this.setState({ ...state });\r\n        } else {\r\n        this.setState({ loading: true });\r\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n        this.fetchItems(endpoint);\r\n        }\r\n    }\r\n\r\n    searchItems = (searchTerm) => {\r\n        let endpoint = '';\r\n        this.setState({\r\n            movies: [],\r\n            loading: true,\r\n            searchTerm\r\n        })\r\n\r\n        if (searchTerm === '') {\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n        } else {\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n        }\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        let endpoint = '';\r\n        this.setState({ loading: true });\r\n\r\n        if (this.state.searchTerm === '') {\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n        } else {\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n        }\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n            this.setState({\r\n                movies: [...this.state.movies, ...result.results],\r\n                heroImage: this.state.heroImage || result.results[0],\r\n                loading: false,\r\n                currentPage: result.page,\r\n                totalPages: result.total_pages\r\n            }, () => {\r\n                if (this.state.searchTerm === \"\") {\r\n                localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-home\">\r\n                {this.state.heroImage ?\r\n                <div>\r\n                    <HeroImage \r\n                        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n                        title={this.state.heroImage.original_title}\r\n                        text={this.state.heroImage.overview}\r\n                    />\r\n                    <SearchBar callback={this.searchItems} />\r\n                </div> : null }\r\n                    <div className=\"rmdb-home-grid\">\r\n                        <FourColGrid\r\n                            header={this.state.searchTerm ? 'Search Result' : 'Popular Movies'}\r\n                            loading={this.state.loading}\r\n                        >\r\n                            {this.state.movies.map((element, i) => {\r\n                                return <MovieThumb \r\n                                            key={i}\r\n                                            clickable={true}\r\n                                            image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                                            movieId={element.id}\r\n                                            movieName={element.original_title}\r\n                                        />\r\n                            })}\r\n                        </FourColGrid>\r\n                        {this.state.loading ? <Spinner /> : null}\r\n                        {(this.state.currentPage <= this.state.totalPages && !this.state.loading) ?\r\n                            <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\r\n                            : null }\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        <div className=\"rmdb-navigation\">\r\n            <div className=\"rmdb-navigation-content\">\r\n                <Link to=\"/\">\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p>/</p>\r\n                <p>{props.movie}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfo\"\r\n            style={{\r\n                background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#000'\r\n            }}\r\n        >\r\n            <div className=\"rmdb-movieinfo-content\">\r\n                <div className=\"rmdb-movieinfo-thumb\">\r\n                    <MovieThumb \r\n                        image={props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${props.movie.poster_path}` : './images/no_image.jpg'}\r\n                        clickable={false} \r\n                    />\r\n                </div>\r\n                <div className=\"rmdb-movieinfo-text\">\r\n                    <h1>{props.movie.title}</h1>\r\n                    <h3>PLOT</h3>\r\n                    <p>{props.movie.overview}</p>\r\n                    <h3>IMDB RATING</h3>\r\n                    <div className=\"rmdb-rating\">\r\n                        <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\r\n                        <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n                    </div>\r\n                    {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n                    {props.directors.map((element, i ) => {\r\n                        return <p key={i} className=\"rmdb-director\">{element.name}</p>\r\n                    })}\r\n                </div>\r\n                <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../../helpers.js';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfobar\">\r\n            <div className=\"rmdb-movieinfobar-content\">\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(props.time)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfoBar;","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = (props) => {\r\n\r\n    const POSTER_SIZE = \"w154\";\r\n\r\n    return (\r\n        <div className=\"rmdb-actor\">\r\n            <img \r\n                src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'}\r\n                alt=\"actorthumb\" \r\n            />\r\n            <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n            <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Actor;","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(`${this.props.match.params.movieId}`)) {\r\n      const state = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({ loading: true })\r\n      // First fetch the movie ...\r\n      const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint)\r\n    .then(result => result.json())\r\n    .then(result => {\r\n      if (result.status_code) {\r\n        this.setState({ loading: false });\r\n      } else {\r\n        this.setState({ movie: result }, () => {\r\n          // ... then fetch actors in the setState callback function\r\n          const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n          fetch(endpoint)\r\n          .then(result => result.json())\r\n          .then(result => {\r\n            const directors = result.crew.filter( (member) => member.job === \"Director\");\r\n\r\n            this.setState({\r\n              actors: result.cast,\r\n              directors,\r\n              loading: false\r\n            }, () => {\r\n              localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state));\r\n            })\r\n          })\r\n        })\r\n      }\r\n    })\r\n    .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-movie\">\r\n        {this.state.movie ?\r\n          <div>\r\n            <Navigation movie={this.props.location.movieName} />\r\n            <MovieInfo movie={this.state.movie} directors={this.state.directors} />\r\n            <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\r\n          </div>\r\n        : null }\r\n        {this.state.actors ?\r\n          <div className=\"rmdb-movie-grid\">\r\n            <FourColGrid header={'Actors'}>\r\n              {this.state.actors.map( (element, i) => {\r\n                return <Actor key={i} actor={element} />\r\n              })}\r\n            </FourColGrid >\r\n          </div>\r\n          : null }\r\n          {!this.state.actors && !this.state.loading ? <h1>No Movie Found!</h1> : null}\r\n          {this.state.loading ? <Spinner /> : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Oops. This page doesn't exist</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from '../elements/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport Movie from '../Movie/Movie';\r\nimport NotFound from '../elements/NotFound/NotFound';\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter basename='/react-movie-search/'>\r\n            <React.Fragment>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/\" component={Home} exact />\r\n                    <Route path=\"/:movieId\" component={Movie} exact />\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n            </React.Fragment>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}