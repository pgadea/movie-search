{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","concat","image","title","text","SearchBar","state","value","timeout","doSearch","event","_this","setState","target","clearTimeout","setTimeout","callback","lib_default","name","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","_ref","movieId","movieName","clickable","pathname","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","_callee","_this$state","result","regenerator_default","wrap","_context","prev","next","fetch","sent","json","Object","toConsumableArray","results","page","total_pages","localStorage","setItem","JSON","stringify","e","console","log","stop","getItem","parse","objectSpread","_this$state2","elements_HeroImage_HeroImage","backdrop_path","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","poster_path","id","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","creditsEndpoint","creditsResult","match","params","status_code","crew","filter","member","job","cast","t0","elements_Navigation_Navigation","location","elements_MovieInfo_MovieInfo","elements_MovieInfoBar_MovieInfoBar","runtime","elements_Actor_Actor","NotFound","App","basename","Fragment","elements_Header_Header","react_router","path","component","exact","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.3171ca86.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"rmdb-header\">\r\n            <div className=\"rmdb-header-content\">\r\n                <Link to=\"/\">\r\n                    <img className=\"rmdb-logo\" src=\"./images/reactMovie_logo.png\" alt=\"rmdb-logo\" />\r\n                </Link>\r\n                <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"tmdb-logo\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","// Configuration for TMDB\n// To see the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'dc2e3d283f656bea4ef3f15ac0a5f652';\n//const API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = (props) => {\r\n    return (\r\n        <div className=\"rmdb-heroimage\"\r\n        style={{\r\n            background:\r\n              `linear-gradient(to bottom, rgba(0,0,0,0)\r\n              39%,rgba(0,0,0,0)\r\n              41%,rgba(0,0,0,0.65)\r\n              100%),\r\n              url('${props.image}'), #1c1c1c`\r\n          }}\r\n        >\r\n            <div className=\"rmdb-heroimage-content\">\r\n                <div className=\"rmdb-heroimage-text\">\r\n                    <h1>{props.title}</h1>\r\n                    <p>{props.text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroImage;","import React, { Component } from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    doSearch = (event) => {\r\n        this.setState({ value: event.target.value })\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.props.callback(this.state.value);\r\n        }, 500);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-searchbar\">\r\n                <div className=\"rmdb-searchbar-content\">\r\n                    <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"rmdb-searchbar-input\"\r\n                        placeholder=\"Search\"\r\n                        onChange={this.doSearch}\r\n                        value={this.state.value}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = (props) => {\r\n\r\n    const renderElements = () => {\r\n        const gridElements = props.children.map( (element, i) => {\r\n            return (\r\n                <div key={i} className=\"rmdb-grid-element\">\r\n                    {element}\r\n                </div>\r\n            )\r\n        })\r\n        return gridElements;\r\n    }\r\n\r\n    return (\r\n        <div className=\"rmdb-grid\">\r\n            {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n            <div className=\"rmdb-grid-content\">\r\n                {renderElements()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFourColGrid.propTypes = {\r\n    header: PropTypes.string,\r\n    loading: PropTypes.bool\r\n}\r\n\r\nexport default FourColGrid;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = ({ image, movieId, movieName, clickable }) => {\r\n    return (\r\n        <div className=\"rmdb-moviethumb\">\r\n            {clickable ?\r\n                <Link to={{ pathname: `/${movieId}`, movieName: `${movieName}`}}>\r\n                    <img src={image} alt=\"moviethumb\"/>\r\n                </Link>\r\n                :\r\n                <img src={image} alt=\"moviethumb\"/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nMovieThumb.propTypes = {\r\n    image: PropTypes.string,\r\n    movieId: PropTypes.number,\r\n    movieName: PropTypes.string\r\n}\r\n\r\nexport default MovieThumb;","import React from 'react';\r\nimport './LoadMoreBtn.css'\r\n\r\nconst LoadMoreBtn = (props) => {\r\n    return (\r\n        <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n            <p>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreBtn;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\n\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem('HomeState')) {\r\n      const state = JSON.parse(localStorage.getItem('HomeState'));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({ loading: true });\r\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  searchItems = searchTerm => {\r\n    let endpoint = '';\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      searchTerm\r\n    });\r\n\r\n    if (searchTerm === '') {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  loadMoreItems = () => {\r\n    let endpoint = '';\r\n    this.setState({ loading: true });\r\n\r\n    if (this.state.searchTerm === '') {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this\r\n        .state.currentPage + 1}`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${\r\n        this.state.searchTerm\r\n      }&page=${this.state.currentPage + 1}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  fetchItems = async endpoint => {\r\n    const { movies, heroImage, searchTerm } = this.state;\r\n    const result = await (await fetch(endpoint)).json();\r\n\r\n    try {\r\n      this.setState(\r\n        {\r\n          movies: [...movies, ...result.results],\r\n          heroImage: heroImage || result.results[0],\r\n          loading: false,\r\n          currentPage: result.page,\r\n          totalPages: result.total_pages\r\n        },\r\n        () => {\r\n          if (searchTerm === '') {\r\n            localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n          }\r\n        }\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  // fetchItems = endpoint => {\r\n  //     const { movies, heroImage, searchTerm } = this.state;\r\n\r\n  //     fetch(endpoint)\r\n  //     .then(result => result.json())\r\n  //     .then(result => {\r\n  //         this.setState({\r\n  //             movies: [...movies, ...result.results],\r\n  //             heroImage: heroImage || result.results[0],\r\n  //             loading: false,\r\n  //             currentPage: result.page,\r\n  //             totalPages: result.total_pages\r\n  //         }, () => {\r\n  //             if (searchTerm === \"\") {\r\n  //             localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n  //             }\r\n  //         })\r\n  //     })\r\n  //     .catch(error => console.error(\"Error:\", error));\r\n  // }\r\n\r\n  render() {\r\n    const {\r\n      movies,\r\n      heroImage,\r\n      loading,\r\n      currentPage,\r\n      totalPages,\r\n      searchTerm\r\n    } = this.state;\r\n    return (\r\n      <div className='rmdb-home'>\r\n        {heroImage ? (\r\n          <div>\r\n            <HeroImage\r\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${\r\n                heroImage.backdrop_path\r\n              }`}\r\n              title={heroImage.original_title}\r\n              text={heroImage.overview}\r\n            />\r\n            <SearchBar callback={this.searchItems} />\r\n          </div>\r\n        ) : null}\r\n        <div className='rmdb-home-grid'>\r\n          <FourColGrid\r\n            header={searchTerm ? 'Search Result' : 'Popular Movies'}\r\n            loading={loading}\r\n          >\r\n            {movies.map((element, i) => {\r\n              return (\r\n                <MovieThumb\r\n                  key={i}\r\n                  clickable={true}\r\n                  image={\r\n                    element.poster_path\r\n                      ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`\r\n                      : './images/no_image.jpg'\r\n                  }\r\n                  movieId={element.id}\r\n                  movieName={element.original_title}\r\n                />\r\n              );\r\n            })}\r\n          </FourColGrid>\r\n          {loading ? <Spinner /> : null}\r\n          {currentPage <= totalPages && !loading ? (\r\n            <LoadMoreBtn text='Load More' onClick={this.loadMoreItems} />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        <div className=\"rmdb-navigation\">\r\n            <div className=\"rmdb-navigation-content\">\r\n                <Link to=\"/\">\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p>/</p>\r\n                <p>{props.movie}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfo\"\r\n            style={{\r\n                background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#000'\r\n            }}\r\n        >\r\n            <div className=\"rmdb-movieinfo-content\">\r\n                <div className=\"rmdb-movieinfo-thumb\">\r\n                    <MovieThumb \r\n                        image={props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${props.movie.poster_path}` : './images/no_image.jpg'}\r\n                        clickable={false} \r\n                    />\r\n                </div>\r\n                <div className=\"rmdb-movieinfo-text\">\r\n                    <h1>{props.movie.title}</h1>\r\n                    <h3>PLOT</h3>\r\n                    <p>{props.movie.overview}</p>\r\n                    <h3>IMDB RATING</h3>\r\n                    <div className=\"rmdb-rating\">\r\n                        <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\r\n                        <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n                    </div>\r\n                    {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n                    {props.directors.map((element, i ) => {\r\n                        return <p key={i} className=\"rmdb-director\">{element.name}</p>\r\n                    })}\r\n                </div>\r\n                <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../../helpers.js';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = (props) => (\r\n        <div className=\"rmdb-movieinfobar\">\r\n            <div className=\"rmdb-movieinfobar-content\">\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(props.time)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\nexport default MovieInfoBar;","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = (props) => {\r\n\r\n    const POSTER_SIZE = \"w154\";\r\n\r\n    return (\r\n        <div className=\"rmdb-actor\">\r\n            <img \r\n                src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'}\r\n                alt=\"actorthumb\" \r\n            />\r\n            <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n            <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Actor;","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\nimport { async } from 'q';\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(`${this.props.match.params.movieId}`)) {\r\n      const state = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({ loading: true })\r\n      // First fetch the movie ...\r\n      const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  fetchItems = async endpoint => {\r\n    const { movieId } = this.props.match.params;\r\n    try {\r\n      const result = await (await fetch(endpoint)).json();\r\n      if (result.status_code) {\r\n        // if no movie is found\r\n        this.setState({ loading: false });\r\n      } else {\r\n        this.setState({ movie: result })\r\n        const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n        const creditsResult = await (await fetch(creditsEndpoint)).json();\r\n        const directors = creditsResult.crew.filter( (member) => member.job === \"Director\");\r\n        this.setState({\r\n          actors: creditsResult.cast,\r\n          directors,\r\n          loading: false\r\n        }, () => {\r\n          localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state));\r\n        })\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-movie\">\r\n        {this.state.movie ?\r\n          <div>\r\n            <Navigation movie={this.props.location.movieName} />\r\n            <MovieInfo movie={this.state.movie} directors={this.state.directors} />\r\n            <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\r\n          </div>\r\n        : null }\r\n        {this.state.actors ?\r\n          <div className=\"rmdb-movie-grid\">\r\n            <FourColGrid header={'Actors'}>\r\n              {this.state.actors.map( (element, i) => {\r\n                return <Actor key={i} actor={element} />\r\n              })}\r\n            </FourColGrid >\r\n          </div>\r\n          : null }\r\n          {!this.state.actors && !this.state.loading ? <h1>No Movie Found!</h1> : null}\r\n          {this.state.loading ? <Spinner /> : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Oops. This page doesn't exist</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from '../elements/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport Movie from '../Movie/Movie';\r\nimport NotFound from '../elements/NotFound/NotFound';\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter basename='/movie-search'>\r\n            <React.Fragment>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/\" component={Home} exact />\r\n                    <Route path=\"/:movieId\" component={Movie} exact />\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n            </React.Fragment>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}